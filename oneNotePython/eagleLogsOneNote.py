# -*- coding: utf-8 -*-
"""
Created on Sun Mar 20 12:01:42 2016

@author: tharrison
"""

import oneNotePython
import xml.etree.ElementTree as ET
import os
import logging

ET.register_namespace("one","http://schemas.microsoft.com/office/onenote/2013/onenote")

logger=logging.getLogger("LogFilePlots.plotObjects.eagLogsOneNote")

class EagleLogOneNote:
    """allows eagle log information to be written to oneNote pages """
    
    def __init__(self, notebookName= "Investigations", sectionName = "General"):
        self.notebookName=notebookName
        self.notebook = oneNotePython.NotebookWrapper(self.notebookName)
        self.sectionName = sectionName
        self.eagleLogPages = self.notebook.getPagesfromSectionName(self.sectionName)
        self.currentPage = None #PageContent Object
        self.mostRecentPageName = None # name of most recently set page
        self.logTypes = ["(Important)","(Debug)","(Calibration)"]# these are note currently used
        self.logFoldersLocation = os.path.join("\\\\ursa","AQOGroupFolder","Experiment Humphry", "Data","eagleLogs")

        self.notebookName = notebookName
        self.sectionName = sectionName        
        
        self.analysisParametersTEXTKEY = 'Analysis Parameters:'
        self.purposeTEXTKEY = 'Purpose of this Log:'
        self.resultsTEXTKEY = 'Results/conclusions:'
        self.plotsTEXTKEY = 'Plots:'
        self.commentsTEXTKEY = 'Additional Comments:'
        self.dataFilesTEXTKEY = 'Data files and sources:'
        self.preambleTEXTKEY = 'Preamble:'

        self.validOutlines = {"parameters":self.analysisParametersTEXTKEY ,
                              "purpose":self.purposeTEXTKEY,
                              "results":self.resultsTEXTKEY,
                              "plots":self.plotsTEXTKEY,
                              "comments":self.commentsTEXTKEY,
                              "data":self.dataFilesTEXTKEY,
                              "preamble":self.preambleTEXTKEY}        
        
        
        
    def setPage(self, logName):
        """note at the moment this does not use an iterator so may be slow if there are lots of pages. Until we have millions of
        logs I doubt this is a problem
        searches through each page in section until it finds a page title that matches
        logName. It removes the logType string from logName in oneNote  
        But why load each page before checking the name?? Guess that's the reason why this is actually so slow now, even with less than million pages.. Gonna change it
        """
        logName = logName.strip()
        for page in self.eagleLogPages:
            title = str(page)
            for logType in self.logTypes:
                title=title.replace(logType, "").strip()
            if title == logName:
                pageXML = self.notebook.getPageContent(page)
                self.currentPage = oneNotePython.PageContent(pageXML,self.notebook)
                self.mostRecentPageName = logName
                return self.currentPage
        self.mostRecentPageName = None
        return None     

    def refreshMostRecentPage(self):
        """refinds the most recent page and pulls its content again """
        self.setPage(self.mostRecentPageName)
        
    def getOutline(self, outlineType):
        """returns outline elementTree object and texList of that outline. you can then use page content
        methods to get/set text. outline type is a string that must be in the list
        of valid outline types"""
        if not outlineType in self.validOutlines:
            raise KeyError('outlineType not in validOutlines. outlineType must be one of %s but outlineType = %s' % (self.validOutlines.keys(), outlineType))
        if self.currentPage is None:
            raise EagleLogOneNoteError("no current page has been selected. i.e. self.currentPage is None")
        textKey = self.validOutlines[outlineType]#maps outline types to TEXT key in one note title of outline
        for outline in self.currentPage.outlines:
            texts = self.currentPage.getOutlineText(outline)
            logger.debug((texts[0].strip(),textKey))
            if textKey == texts[0].strip():
                logger.info("found correct outline=%s" % textKey)
                texts=map(lambda x:"\n" if x is None else x, texts)#replace None with \n
                return outline,texts
        raise EagleLogOneNoteError("found no matching outline for to %s. This means the page does not meet EagleLogOneNote standards." % textKey)

    def getOutlineText(self, outlineType, removeSectionTitle=True):
        """returns text of a given outlineType """
        if not outlineType in self.validOutlines:
            raise KeyError('outlineType not in validOutlines. outlineType must be one of %s but outlineType = %s' % (self.validOutlines.keys(), outlineType))
        if self.currentPage is None:
            raise EagleLogOneNoteError("no current page has been selected. i.e. self.currentPage is None")
        textKey = self.validOutlines[outlineType]#maps outline types to TEXT key in one note title of outline
        for outline in self.currentPage.outlines:
            texts = self.currentPage.getOutlineText(outline)
            if textKey == texts[0].strip():
                texts=map(lambda x:"\n" if x is None else x, texts)#replace None with \n
                if removeSectionTitle:
                    return "".join(texts[1:])#[1:] makes us remove the section title which is what we want
                else:
                    return "".join(texts)
        raise EagleLogOneNoteError("found no matching outline for to %s. This means the page does not meet EagleLogOneNote standards." % textKey)        
        
    def getSectionNames(self):
        """returns list of section names in oneNote. Should correspond to the investigations we are using """
        return self.notebook.getSectionNames()
            
    def setOutline(self, outlineType, text, rewrite=True):
        """sets the content of a eagleOneNote outline to text. It doesn't affect the 
        heading or the initial blank line which is why it changes textElements[2]"""
        if not outlineType in self.validOutlines:
            raise KeyError('outlineType not in validOutlines. outlineType must be one of %s but outlineType = %s' % (self.validOutlines.keys(), outlineType))
        if self.currentPage is None:
            raise EagleLogOneNoteError("no current page has been selected. i.e. self.currentPage is None")
        outlineObject, currentText = self.getOutline(outlineType)
        textElements = self.currentPage.getOutlineTextElements(outlineObject)
        logger.info( textElements)
        textElements[2].text = text
        if rewrite:
            self.currentPage.rewritePage()

    def setParametersOutline(self, xAxis, yAxis, series, rewrite=True):
        """writes the parameters outline with correct syntax. xAxis, yAxis and  series
        ares strings"""
        logger.warning("xAxis=%s" % xAxis)
        textConstruction = "xAxis: %s\nyAxis: %s\nSeries: %s""" % (xAxis,yAxis, series)     
        self.setOutline("parameters", textConstruction, rewrite)
        
    def getParametersOutlineValues(self):
        """returns xAxis, yAxis, series tuple """
        parametersText = self.getOutlineText("parameters")
        params = parametersText.split("\n")[1:]
        logger.warning("params=%s" % params)
        try:
            xAxis = params[0].split(": ")[1].strip().strip("<br>")
            yAxis = params[1].split(": ")[1].strip().strip("<br>")
            series = params[2].split(": ")[1].strip().strip("<br>")
        except IndexError as e:
            logger.error("could not pull axes data etc. from current page")
            return ("epoch seconds","N", "None")
        return (xAxis, yAxis,series)
        
    def setDataOutline(self, eagleFolder, rewrite=True):
        """eagleFolder is string of logName. All paths are found automatically """
        logFolder = os.path.join(self.logFoldersLocation, eagleFolder)
        csvData = os.path.join(logFolder,eagleFolder+".csv" )
        sequence = os.path.join(logFolder,"copyOfInitialSequence.ctr" )
        images = os.path.join(logFolder,"images" )
        comments = os.path.join(logFolder,"comments.txt" )
        
        logFolderString='%s: <a\nhref="file:%s">%s</a>\n'  % ("Log Folder: ",logFolder, eagleFolder)
        csvDataString='%s: <a\nhref="file:%s">%s</a>\n' % ("Raw CSV data: ", csvData, eagleFolder)
        sequenceString = '%s: <a\nhref="file:%s">%s</a>\n' % ("Sequence used: ", sequence, "copyOfInitialSequence.ctr")
        imagesString = '%s: <a\nhref="file:%s">%s</a>\n'% ("Images Folder: ", images, "images")
        commentsString ='%s: <a\nhref="file:%s">%s</a>'% ("Comments: ", comments, "comments.txt")
        
        fullDataString = logFolderString+csvDataString+sequenceString+imagesString+commentsString
        self.setOutline("data", fullDataString, rewrite)
                        
    def addImageToPlotOutline(self, fullImagePath, shape, outlineWidth=400, rewrite=True):
        """full image path leads to image file.png
        shape is a width height tuple or list of the image aspect ratio. Since we fix outline width we just use shape for the ratio
        if rewrite is true image will be instantly commited to oneNote
        otherwise user must rewrite page manually
        
        """
        outlineObject, currentText = self.getOutline("plots")
        logger.warning("adding image to plot outline with shape %s,%s "% shape)
        originalOutlineWidth, outlineHeight = self.currentPage.getOutlineSize(outlineObject)
        self.currentPage.setOutlineSize(outlineObject, outlineWidth,outlineHeight*(1.0+float(shape[1])/shape[0]))
        self.currentPage.addImage(outlineObject,fullImagePath,shape, rewrite)
                        
    def createNewEagleLogPage(self,logName, refresh=True, setCurrent=True):
        """creates a new page with name logName following the syntax given """
        newPageID = self.notebook.createBlankPageFromName(self.sectionName)
        currentFolder = os.path.split(__file__)[0]
        newPageTree = ET.parse(os.path.join(currentFolder,"templates","eagleLogDefaultNewPage.xml"))
        newPageRoot = newPageTree.getroot()
        newPageRoot.attrib["ID"]=newPageID
        newPageXML = ET.tostring(newPageRoot,encoding="utf8", method="xml")
        pageContent = oneNotePython.PageContent(newPageXML,self.notebook)# the xml in this page doesn't yet exist but we will soon write this to the newPageID
        pageContent.setTitle(logName)
        pageContent.rewritePage()
        if refresh:
            logger.info( "refreshing...")
            self.__init__(self.notebookName, self.sectionName)
            pageContent = self.setPage(logName)
        if setCurrent:
            self.currentPage=pageContent
        return pageContent
        
    def organiseOutlineSizes(self):
        """this function makes sure none of the outlines overlap and neatens up outline edges """        
        outlineTypes = ["parameters","purpose","results", "plots","comments","data", "preamble"]
        outlines = map(self.getOutline,outlineTypes)
        outlines = [outline[0] for outline in outlines]
        x,y = 36,90 #starting coordinates
        verticalBuffer = 10
        for outline in outlines:
            self.currentPage.setOutlinePosition(outline,x,y)
            width,height = self.currentPage.getOutlineSize(outline)
            y+=height+verticalBuffer
        self.currentPage.rewritePage()
        
    def setAllOutlineWidths(self,width):
        """this function sets all outline widths to a given value and doesn't change their height.
        Should be followed by organiseOutlineSizes"""        
        outlineTypes = ["parameters","purpose","results", "plots","comments","data", "preamble"]
        outlines = map(self.getOutline,outlineTypes)
        outlines = [outline[0] for outline in outlines]
        for outline in outlines:
            oldWidth,height = self.currentPage.getOutlineSize(outline)
            self.currentPage.setOutlineSize(outline,width,height)
        self.currentPage.rewritePage()
            
class EagleLogOneNoteError(Exception):
    
    def __init__(self,*args,**kwargs):
        super(EagleLogOneNoteError,self).__init__(*args,**kwargs)
        
if __name__=="__main__":
    elon = EagleLogOneNote()
    pageContent=elon.createNewEagleLogPage("2016 10 07 - page tags test 2")
#    
#    elon.setPage("Log Name 3")
#    purposeOutline = elon.getOutline("purpose")[0]
    plotOutline = elon.getOutline("plots")[0]
#    elon.setOutline("purpose","The new purpose is a bit more important and \n new line ")
#    elon.setOutline("results","The new conclusion is a bit more important I think")
#    elon.setOutline("comments","The new comment is a bit more important")
#    elon.setOutline("preamble","The new preamble is a bit more important")
#    elon.setParametersOutline("N","T","None")
#    elon.setDataOutline("2016 03 24 Li BEC Stability lunch")
    imagePath = os.path.join(elon.logFoldersLocation,"2016 03 21 Li Rabi ocsillation repeat","2016-03-21T142435-2016 03 21 Li Rabi ocsillation low power finding detuning accurately - None vs None.png")
    pageContent.addPageTags(["BEC","DebugPageTag"])
#    imagePath2 = os.path.join(elon.logFoldersLocation,"2016 03 18 -  Rabi Oscillations lower power 1","2016-03-18T143037-2016 03 18 -  Rabi Oscillations lower power 1 - PiPulseDurationTime vs Summed OD Atom Number.png")
#    
#    page = elon.notebook.getPageFromName("Eagle Logs", "Log Name 1")
#    pageContent = oneNotePython.PageContent(elon.notebook.getBinaryPageContent(page),elon.notebook)
#    
    #imageDataTest = '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\ntI4ePaoTJ05U2RStLJ9Wq1WzZ8/WsWPHlJOTo7Fjx+ruu+8uM2/BggX6+uuvy93/xZ9Zenp6Nc8a\n9YEmLeDGWNe9dgwbNky9R41S30oatTsk9fPz06IlSxQeHu7C6ipnsVgUHR2thx95RH//xz905513\nqnnz5vVdlkPIL8yM/MLMyC/MjPzCrMguzIz8ojasWbNGxyKOqXBmoVRRT8UiFc4s1PGI4xVeIeao\nqKgozZo1S2vWrKn0qsPK5lV29d3HH3+s6OhoeXt7KzIyUi+88IIkKS8vTw8//LBCQ0MVEBCg4cOH\nKysrq9x9BAcH6+6771ZaWppT5ydJJ0+e1J133qmAgACFhobqiSeeUGFhoSRp8eLF6tatm/21w4YN\n08SJE+3jyy67TNu3b6+y/uL3Z8aMGYqIiFBIyG+d9pycHN1///0KCgpSYGCgRo8eXWHd/v7+GjRo\nkI4dO2bf39SpU9W8eXOFhYVp2bJlmjBhgkJDQxUREeF0Di6Wl5dX4XfaihUrNH36dAUEBCg8PFwT\nJkzQ8uXLK9xXdeY39DyWVFFOqqqlZI78/f113XXXlTpfi8WiSZMmaebMmZIkwzD07LPPasqUKdWu\n8dJLL7VfTerp6SlPT0+nztkwDE2ZMkXTpk2zPzdlyhTNmTNHw4YNk6+vr/0K2MpUls9OnTopISFB\nfn5+ysnJUUZGhnr37l1qzqeffqoPP/xQb775plPnU1v490PtoEkLoMGzWCx65bXX1GXUKHX299cz\nFot+kHRG0jpJE7y8lOjnp/mLF+uOEn9NBgAAAAAAgKqtTl6tnFtyKm7QFrNI2QOztTp5tdPHzMvL\nU2BgYK3NK3b69GmNGjVK77zzjvLz85WUlGRvRI0fP14ZGRnau3ev0tPTZbPZ9OSTT5a7n/T0dM2Z\nM0dDhw51+NgV1T1mzBj5+PgoPT1dO3bs0JYtWzR37lxJUkJCgrZt26YLFy7owoUL+u6777R69Wp7\nDXl5eWrfvr1D9dtsNoWEhGjfvn06ffq0JOmRRx7R4cOHtXv3bp0+fVoTJkyosObs7GwtXLhQo0aN\nsu8vNDRU6enpmjJlikaMGKHLL79cR44c0aRJk/TUU0/ZXztx4kT5+vqW+1i8eHGN3sNiR44c0Zkz\nZ0pdCdmmTRvt2bOnVuZLDT+PJZWXk6pqGTdunDIyMrRnzx5lZWVp0qRJZfY7evRopaamatOmTUpK\nSlJYWJi6du1a7foyMzPtV5MOHDiw1LFqkrNPPvlE2dnZuuuuuyRJBQUF2rBhgz777DO1aNFCgYGB\nGjp0qE6ePFntWi82atQoBQcHa+fOnfrnP/9pf37r1q2aNm2aVq5cWWEz32azycfHR8HBwRoyZIgy\nMzOdrgcuYMCt8JEAdaeoqMhYt26d8dj48UZcZKTh5elpJHTsaMyaPt3Yvn17fZcHAAAAAADgcs7+\nPrKoqMgIiQgxlCLDof+3V0bo5aHVOsbevXsNT09PwzAMw2azGTt37jSuu+46Y/bs2aW2OTqveK6P\nj0+Z1504ccLw8PAwli5dauTm5trn5+TkGD4+PkZaWpr9uc2bNxstW7a070OS4ePjY3h5eRmSjLFj\nxxrnz58vs7340aNHjyrrPnv2rGG1Wo2DBw/aj5uUlGRER0fbx1dccYWxdetWIzk52bjnnnuM9u3b\nG7t27TJWrFhhDBgwwOH6S74/xa+xWq3G3r17K3zfSp6TJMPLy8tITk4us78dO3YYvr6+9vH27duN\nJk2alPdxO6W889i3b5/h4eFR6rndu3dXePyq5jeGPDqSVUdryc7ONjw9PSvNUfE+X3rpJePGG280\nOnfubGzcuLHSvBU/vL297XNKWrhwodGpUyf7OddEYWGhER0dbXzwwQf25w4cOGBYLBZjw4YNxoUL\nF4xTp04ZQ4YMMW6//fYq91fe+3exs2fPGqNGjTLuv/9+wzAM4+TJk8Y111xj/PLLLxXuIy8vz8jM\nzDQMwzAyMjKMIUOGGIMGDarOqdpV52cC/SznOXf3aQAwEYvFoptuukk33XSTNH++bDab08tdAAAA\nAAAAoO7ZbDb5+vrKYrEoMjJSDz74oB599FGlpqbWaF5FmjVrpqVLl+r555/XmDFjFBcXp7lz5yoq\nKkoFBQW66qqrSs338vKy/7enp6fy8/NVVFSkm2++WVu3blVRUVGZ7dU5v/3798tmsykyMtI+Nyoq\nSocPH7aPExIStGXLFu3fv1+DBg1SZGSkVq9erezsbCUkJEiSMjIyqqz/YhkZGbLZbIqJialwTslz\nysvL04wZM/TYY4/p448/LjXP29tbhmHYxz4+PuXem7MqFy8lXLzsc2UCAgJUVFRU6neBeXl5CggI\nqPH8hp7HyrZdrKpsHTlyREVFRZXmqNjYsWM1d+5cxcbGqmfPnkpJSamyrpSUFHXs2LHMc08//bS+\n/fbbSjNelcWLF8vb21t33nlnqecNw1DPnj3l4eGhkJAQTZ48WX379q3xcUoKDAzUo48+ql69eumN\nN97Q8ePHtW/fPrVr185+7OJcJSUlKTEx0X41sCSFh4dr6tSp6tOnT63Ug7rFcseAG2Nd97pFg7Zu\nkV+YGfmFmZFfmBn5hVmRXZgZ+YWzLBaLEhMTpfUOvmC9fptfTcXNmby8PKWkpOixxx6TxVJ2feWK\n5nl6eqqoqKhUo7AiI0eO1I4dO3Tq1Cndcccduu+++3TJJZfI09NTGRkZys/Ptz/OnTtX5vUeHh56\n7733dOLEiUqXB3ak7uLjHjx40D73wIEDioiIsI+Lm7QbNmxQ3759NXjwYK1atUr//ve/1aNHD0mq\nVv3FWrRoIQ8PD2VkZDh0Dn5+fhoxYkSpWh31+OOP2+8jevHj7bffts8rXsa2+OGI8PBwBQUFaf/+\n/fbnUlNTFRsbW+P5DT2P1VFVLWFhYfLw8Cj1hwUVadKkid566y29/PLLNa7n/PnzGjFihObMmaM2\nbdqU2uZozqTfljWeMWOGZs6cWeqzjYiIkI+PT6kGcmVN/5o4d+6cvekaHR2t8+fP29/XHTt22HNV\n0XfpuXPn1LRp01qrpzz8+6F20KQFAAAAAAAAANTYoMRB8k/yl6rqNxlSwGcBGpQ4yCV1lXTFFVfI\nz89PGzZs0NmzZ7VgwYJy56Wmpmru3Lk6cuSIfH19FRISopCQEPt9J0ePHq1Dhw7JMAylpaXpb3/7\nW7n7adasmT766CMtWrRIH330UY3rDgwM1MCBAzV16lRlZWUpLS1Nzz77rEaOHGmf07NnTyUlJalV\nq1by9/fXtddeq+PHj2vnzp26/vrr7fupTv2SFBQUpISEBD3zzDPKyclRZmamXnvttQrnZ2VlacGC\nBTW6j+hLL71UpgFb/Ljvvvuqvb+LDRkyRDNnzlROTo6OHj2qV155Rbfddpt9+//+9z/7lYqOzHeW\nWfNYnqpqadq0qXr16qVZs2YpJydHGRkZmj9/foX7u/XWW+25rYkpU6YoKipKY8aMKbOtOjlbuHCh\nwsLCNHjw4FLPe3t766677tKf//xnnThxQseOHSvzv8mL81SVOXPmaM2aNcrPz9fhw4c1bdq0Mlfv\nVubll19WcnKyzp8/r4yMDE2bNk0jRoxw+PWoPzRpATdWnS9ywN2QX5gZ+YWZkV+YGfmFWZFdmBn5\nRW0YMGCAwg6HyTrNWnGj1pCs06xqcbiFbr75ZpfWJ/22vO6LL76ooUOHqm3btvL29i53XkhIiL77\n7jvFxMTI399f7733nhYvXixJWrRokaKiotS9e3d5e3ura9eu2rNnT4XHjI+P17x58zRmzJgaXV1a\nbNGiRSosLFRERIQ6dOigzp07a/LkyfbtrVu3VkhIiAYN+r/m96BBg9S+fftSywNXt/7i1+zdu1eh\noaHq1q1bmZXpbDab/UrEyMhInTx5UkuWLKnxuTrj0ksvVZcuXWSz2dS8eXMNHDjQvm3evHnKz89X\nWFiYYmJi1LVrV40bN86+vaCgoNSVkVXNd5aZ81ieqmp58803tWfPHoWEhCghIUH+/v61evyS5s2b\np1WrVpW6Svbo0aPV2se5c+c0Z84czZo1q9ztr776qsLDwxUVFaW2bdsqLi6u1NyL8yRVns+wsDBN\nnDhRQUFBiouLU9u2bfXcc885XK+fn5/GjRungIAAtW/fXh07dtT06dOrdc7Vxb8faofFcOR6eriM\nxWJxaIkDAAAAAAAAAHBWbf0+8vjx44rvHa+0/mkqnFwohZTYeFqyzrWq5bqW+uHLH9SiRQunjwfA\nvIrvI+vofW/hOtX5mUA/y3lcSQu4MdZ1h5mRX5gZ+YWZkV+YGfmFWZFdmBn5RW1p0aKFfvjyB3VP\n6S6vll5qEttEnl081SS2ibxaeql7SncatADQQPDvh9pBkxYAAAAAAAAAUEsC5OHhK/lFS+3+KPlF\n/zZWQH0XBsBNWCyWUktxA40VTVrAjbGuO8yM/MLMyC/MjPzCzMgvzIrswszIL2rLb8sd99ammBgV\nHDqk3B9/lO3NN5X7448qOHRIm2JiFN+7t44fP17tfaekpNibOl5eXgoPD9e4ceOUnZ2t1NRU+fr6\nVjmvqv072zC6+NhBQUHq37+/UlNTy2wv+XjjjTdqXHd9SElJKff9tlqt8vPzU3x8vH744Yd6qc1m\ns2njxo3y8fEpsy0rK0vDhg1TQECAQkJCNGHCBNlstgr3Vdn8xpTHi7fVlujoaPv7UHy8Hj16lJpj\ns9nUunXrUu9nee9LyUzWlovP3Wq1ymKxlJqzbds29evXT0FBQfLx8dH+/fsr3Wdl+fz+++/VrVs3\nBQYGysfHRx06dNDatWvt28v7TC6//HKHt9cF/v1QO2jSAgAAAAAAAABq7MyZM4rv3Vtpgwer8Lnn\n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\nk9Wu9WKjRo1ScHCwdu7cqX/+85/257du3app06Zp5cqVFTbzbTabfHx8FBwcrCFDhigzM9Ppehyx\n6J139LtevTT1l1+0+f77lbttm0uO2+AZcCt8JAAAAAAAAABcxdnfRxYVFRkRISFGimQYDjz2Ssbl\noaHVOsbevXsNT09PwzAMw2azGTt37jSuu+46Y/bs2aW2OTqveK6Pj0+Z1504ccLw8PAwli5dauTm\n5trn5+TkGD4+PkZaWpr9uc2bNxstW7a070OS4ePjY3h5eRmSjLFjxxrnz58vs7340aNHjyrrPnv2\nrGG1Wo2DBw/aj5uUlGRER0fbx1dccYWxdetWIzk52bjnnnuM9u3bG7t27TJWrFhhDBgwwOH6S74/\nxa+xWq3G3r17K3zfSp6TJMPLy8tITk4us78dO3YYvr6+9vH27duNJk2alPdxO6S8evft22d4eHiU\nem737t0VHqeq+Y0hd45k0tFasrOzDU9Pz0rzUrzPl156ybjxxhuNzp07Gxs3bqw0V8UPb29v+5yS\nFi5caHTq1Ml+zjVRWFhoREdHGx988IH9uQMHDhgWi8XYsGGDceHCBePUqVPGkCFDjNtvv73K/ZX3\n/l3s7NmzxqhRo4z777/fMAzDOHnypHHNNdcYv/zyS4X7yMvLMzIzMw3DMIyMjAxjyJAhxqBBg6pz\nqlUq72fCm2+/bfhFRBhKTTVkGP/3oJ/lNOfuSg0AAAAAAAAAQB2z2Wzy9fWVxWJRZGSkHnzwQT36\n6KNKTU2t0byKNGvWTEuXLtXzzz+vMWPGKC4uTnPnzlVUVJQKCgp01VVXlZrv5eVl/29PT0/l5+er\nqKhIN998s7Zu3aqioqIy26tzfvv375fNZlNkZKR9blRUlA4fPmwfJyQkaMuWLdq/f78GDRqkyMhI\nrV69WtnZ2UpISJAkZWRkVFn/xTIyMmSz2RQTE1PhnJLnlJeXpxkzZuixxx7Txx9/XGqet7f3/+/p\n/MbHx6fce3Y6IyAgQEVFRbLZbPalb/Py8hQQEFDj+Q09d5Vtu1hVGTpy5IiKiooqzUuxsWPHau7c\nuYqNjVXPnj2VkpJSZV0pKSnq2LFjmeeefvppffvtt5VmuSqLFy+Wt7e37rzzzlLPG4ahnj17ysPD\nQyEhIZo8ebL69u1b4+OUFBgYqEcffVS9evXSG2+8oePHj2vfvn1q166d/djFuUpKSlJiYqL9amBJ\n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\nMaQFAAAAAAAAAAAAABdiSAsAAAAAZcyOHTtksVjk4+MjX19fValSRcOGDdP58+e1c+dO2Wy2YtcV\n9/4+Pj6lktHX11c2m001a9bUI488otTU1BK9b1Ff76+Z//y9KAkfH5+8P5e+n5f+lNbXAAAAAACY\nC0NaAAAAACiDvL29lZ2draysLK1atUq7d+/WI488ovr16ys9Pb3Yda7KmJWVJbvdriVLlshisahV\nq1Y6duyYS77+X78XVys7O1vZ2dlKTk6W1WrNO87Ozi61rwEAAAAAMBeGtAAAAABQxtWqVUtjxozR\nd999V+RVsEWt27FjR6FXhM6cOVP169eXn5+fatSoobfeekuSlJaWpscee0xhYWEKCgpSv379dPr0\n6Xyv9/LyUr169fTRRx+pTZs2Gj16dN7XLCzDpedGjx6tiIgIhYaGSpLeeecdXXfddfLz81ODBg30\nww8/SJJiYmKUk5OTd4Xr0qVL873/iRMndPfddysoKEhhYWEaMWKEsrOzL/t6L774oipWrKiIiAgt\nWrSo2O/9n7/GX9+jUqVK+uabb/T0008rLCxMERERWrhwYd5rHf3+AQAAAAA8D0NaAAAAAIDS0tIU\nHBxcausuOXXqlAYOHKjJkycrPT1d8+fPzxuYPvroo0pJSdH27dt16NAh5eTk6Pnnny/y/QYNGqQl\nS5Y49LVzcnIUGhqqXbt26dSpU5Kknj17avfu3crIyNDLL7+sYcOGSZKSkpLyrhrOzs5WdHR0vvd7\n4IEHZLVadejQIW3evFk///yzxo4de9nXq1Chgg4dOqSnnnpKL7zwgkM5/5o5LCxMhw4d0gsvvKB7\n7rlHVatW1ZEjR/Tss8/qpZdeylt7Nd8/AAAAAIBnKNlNggAAAAAAppabm6utW7dqxIgReuihh0q8\nrqDXZWVlae/evWrSpIkaNWqkRo0ayW636+uvv9aePXsUHh4uSXr66ad19913F/l+VatWVUpKikNf\n29vbW48//vhlj9ntdj3zzDNas2aNTp48KS8vx353+dy5c1qwYIH27Nmj8uXLq3z58ho1apRGjBih\nl19+Oe/rPf3005Kk+Ph4vfrqqw69918zP/PMM5Kk6OhoWa3WvPfs0KFD3uD3ar9/AAAAAADPwJW0\nAAAAAFAG5eTkyGazKTAwUH379tW9996rUaNGXfW6wlSoUEFTp07V22+/rfLly+uWW25RQkKCUlJS\nlJGRoTp16shms8lms6ljx455V7wWJiUlRdWqVbviv++lv0t8fLzq1Kmj9evXa+PGjcrNzXXotUeP\nHlVOTo5q1KiR91itWrV0+PDhAtf7+fkpJyfnqnL++T0Mw8g7tlqtee95td8/AAAAAIBn4EpaAAAA\nACiDvL29lZ6eftXrvL29lZubK8MwZLFYinyPAQMGaMCAAbpw4YLef/99DRkyRNu2bZO3t7dSUlIU\nFhbmcO5p06apW7duV5xBkg4cOKDU1FT94x//kK+vr86ePZv3nMViuWwg+lfh4eHy9vbW/v37VbNm\nTUnSvn37FBER4XD20nQpz5V+/wAAAAAAnoEraQEAAAAAV6x69ery9/dXUlKSzp49qw8//LDAdTt3\n7tTYsWN15MgR2Ww2hYaGKjQ0VMHBwerbt6+GDh2qAwcOyDAMHTx4UO+9916+98jNzdXevXv1+OOP\na+XKlXlb/jqa4ZLw8HDZbDatXr1a586d0/jx4/Oeu/766+Xt7a0ffvhBZ8+e1blz5y57bXBwsLp1\n66YXX3xRp0+f1sGDBzVu3DgNGDDgCr9zpeNKvn8AAAAAAM/DkBYAAAAAcMWsVqvefvtt9e3bVzfe\neKP8/PwKXBcaGqqffvpJkZGRCgwM1LRp0zRlyhRJ0oQJE1SrVi21a9dOfn5+at26tbZt25b32pyc\nHPn4+Mhmsyk6OlrZ2dlauXKlQkNDryjDJYGBgfr3v/+tbt26qUGDBgoICMh7Ljg4WKNHj1bPnj0V\nERGhrVu35nv9hAkTlJ2drYiICN18881q2bLlFW39XNqK+/4BAAAAADyXxShqPycAAAAAAAAAAAAA\nQKniSloAAAAAAAAAAAAAcCGGtAAAAAAAAAAAAADgQgxpAQAAAAAAAAAAAMCFGNICAAAAAAAAAAAA\ngAsxpAUAAAAAAAAAAAAAF2JICwAAAAAAAAAAAAAuxJAWAAAAAAAAAAAAAFyIIS0AAAAAAAAAAAAA\nuBBDWgAAAAAAAAAAAABwIYa0AAAAAAAAAAAAAOBCDGkBAAAAAAAAAAAAwIUY0gIAAAAAAAAAAACA\nCzGkBQAAAAAAAAAAAAAXYkgLAAAAAAAAAAAAAC7EkBYAAAAAAAAAAAAAXIghLQAAAAAAAAAAAAC4\nEENaAAAAAAAAAAAAAHAhhrQAAAAAAAAAAAAA4EIMaQEAAAAAAAAAAADAhRjSAgAAAAAAAAAAAIAL\nMaQFAAAAAAAAAAAAABdiSAsAAAAAAAAAAAAALsSQFgAAAAAAAAAAAABciCEtAAAAAAAAAAAAALgQ\nQ1oAAAAAAAAAAAAAcCGGtAAAAAAAAAAAAADgQgxpAQAAAAAAAAAAAMCFGNICAAAAAAAAAAAAgAsx\npAUAAAAAAAAAAAAAF2JICwAAAAAAAAAAAAAuxJAWAAAAAAAAAAAAAFyIIS0AAAAAAAAAAAAAuBBD\nWgAAAAAAAAAAAABwIYa0AAAAAAAAAAAAAOBCDGkBAAAAAAAAAAAAwIUY0gIAAAAAAAAAAACACzGk\nBQAAAAAAAAAAAAAXYkgLAAAAAAAAAAAAAC7EkBYAAAAAAAAAAAAAXIghLQAAAAAAAAAAAAC4EENa\nAAAAAAAAAAAAAHAhhrQAAAAAAAAAAAAA4EIMaQEAAAAAAAAAAADAhRjSAgAAAAAAAAAAAIALMaQF\nAAAAAAAAAAAAABdiSAsAAAAAAAAAAAAALsSQFgAAAAAAAAAAAABciCEtAAAAAAAAAAAAALjQ/wNh\nOO0VfbhfyAAAAABJRU5ErkJggg=='    
##    
#    pageContent=elon.createNewEagleLogPage("Log Name 3")
#    #elon.setPage("Log Name 2")
#    elon.setOutline("purpose","checking it works straight away 1",rewrite=False)
#    elon.setOutline("results","checking it works straight away 2",rewrite=False)    
    elon.addImageToPlotOutline(imagePath, (360,105))
    elon.currentPage.rewritePage()

    